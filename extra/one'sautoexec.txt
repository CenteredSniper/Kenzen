local loadtime = tick()
local kenzengui = false
local function getsynassetfromurl(URL)
	local getsynasset, request = getsynasset or getcustomasset or error('invalid attempt to \'getsynassetfromurl\' (custom asset retrieval function expected)'), (syn and syn.request) or (http and http.request) or (request) or error('invalid attempt to \'getsynassetfromurl\' (http request function expected)')
	local Extension, Types, URL = '', {'.png', '.webm'}, assert(tostring(type(URL)) == 'string', 'invalid argument #1 to \'getsynassetfromurl\' (string [URL] expected, got '..tostring(type(URL))..')') and URL or nil
	local Response, TempFile = request({
		Url = URL,
		Method = 'GET'
	})

	if Response.StatusCode == 200 then
		Extension = Response.Body:sub(2, 4) == 'PNG' and '.png' or Response.Body:sub(25, 28) == 'webm' and '.webm' or nil
	end

	if Response.StatusCode == 200 and (Extension and table.find(Types, Extension)) then
		writefile("loadingimage.png", Response.Body)
		return getsynasset("loadingimage.png")
	elseif Response.StatusCode ~= 200 or not Extension then
		warn('unexpected \'getsynassetfromurl\' Status Error: ' .. Response.StatusMessage .. ' ('..URL..')')
	elseif not (Extension) then
		warn('unexpected \'getsynassetfromurl\' Error: (PNG or webm file expected)')
	end
end
task.spawn(coroutine.create(function()
	local mt = getrawmetatable(game)
	local backup = mt.__namecall
	setreadonly(mt, false)

	mt.__namecall = newcclosure(function(self, ...)
		local method = getnamecallmethod()
		local args = {...}
		if method == "Kick" then
			printconsole('attempted kick')
			return wait(9e9)
		end
		return backup(self,...)
	end)

	setreadonly(mt, true)
	game:GetService("CoreGui"):WaitForChild("RobloxLoadingGui",500):WaitForChild("BlackFrame",500).Visible = false
	task.wait()
	local fakecha = Instance.new("Model")
	local fakepart = Instance.new("Part")
	local fakehum = Instance.new("Humanoid")
	local vidgui = Instance.new("SurfaceGui")
	local vid = Instance.new("ImageLabel")
	
	fakepart.Size = Vector3.new(5,1,5)
	fakepart.CFrame = CFrame.Angles(0,math.rad(-90),0)--CFrame.new(Vector3.new(),workspace.CurrentCamera.CFrame.Position)
	fakepart.Transparency = 1
	
	fakecha.PrimaryPart = fakepart
	
	vidgui.Face = Enum.NormalId.Top
	
	vid.Size = UDim2.new(1,0,1,0)
	vid.BackgroundTransparency = 1
	task.spawn(coroutine.create(function()
		vid.Image = isfile("loadingimage.png") and getsynasset("loadingimage.png") or getsynassetfromurl("https://cdn.discordapp.com/attachments/806690952089305158/954924304238260284/FN_nKHuUcAAY8H4.png")
	end))
	
	vid.Parent = vidgui
	vidgui.Parent = fakepart
	fakepart.Parent = fakecha
	fakehum.Parent = fakecha
	fakecha.Parent = workspace
	game.Loaded:Wait()
	fakecha:Destroy()
end))
task.spawn(coroutine.create(function()
	if kenzengui then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CenteredSniper/Kenzen/master/KenzenGui.lua",true))()
	else
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CenteredSniper/Kenzen/master/KenzenScript.lua",true))()
	end
end))
task.spawn(coroutine.create(function()
	if not game:IsLoaded() then game.Loaded:Wait() end
	repeat wait() until game.CoreGui:FindFirstChild("PurchasePrompt")
	repeat wait() until game.CoreGui.PurchasePrompt:FindFirstChild("ProductPurchaseContainer")
	local vu = game:GetService("VirtualUser")
	game.CoreGui.PurchasePrompt:FindFirstChild("ProductPurchaseContainer").Visible = false
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)
	local function antijacket(obj)
		if obj:IsA("WrapLayer") then
			obj.Parent:Destroy()
		end
	end    
	workspace.DescendantAdded:Connect(antijacket) for i,v in pairs(workspace:GetDescendants()) do antijacket(v) end
end))
task.spawn(coroutine.create(function()
	--websocket chat
	if not game:IsLoaded() then game.Loaded:Wait() end
	repeat wait() until game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
	repeat wait() until game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents"):FindFirstChild("SayMessageRequest")
	local url = 'wss://webhookyeah.herokuapp.com'

	local socket = syn.websocket.connect(url)
	local player = game.Players.LocalPlayer

	local connection = socket.OnMessage:Connect(function(MESSAGE)
		local msg = game:GetService("HttpService"):JSONDecode(MESSAGE)
		--if msg[1] ~= player.Name then
		game.StarterGui:SetCore("ChatMakeSystemMessage", { 
			Text = msg[1] .. ": " .. msg[2];
			Font = Enum.Font.SourceSans;
		})
		--end
	end)
	socket.OnClose:Connect(function()
		local bruh = false
		print("Websocket was closed.")
		while bruh == false do
			local succ,err = pcall(function()
				socket = syn.websocket.connect(url)
				print("Websocket failed to restart, trying again.")
			end)
			if succ then
				connection:Disconnect()
				connection = socket.OnMessage:Connect(function(MESSAGE)
					local msg = game:GetService("HttpService"):JSONDecode(MESSAGE)
					--if msg[1] ~= player.Name then
					game.StarterGui:SetCore("ChatMakeSystemMessage", { 
						Text = msg[1] .. ": " .. msg[2];
						Font = Enum.Font.SourceSans;
					})
					--end
				end)
				bruh = true
				print("Websocket restarted successfully")
			end
			task.wait()
		end
	end)

	local remote = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
	local remote_hook = nil
	remote_hook = replaceclosure(remote.FireServer, newcclosure(function(self, ...)
		return remote_hook(self, ...);
	end))

	local namecall = nil
	namecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
		local namecall_method, parameters = (getnamecallmethod or get_namecall_method)(), {...};

		if namecall_method == "FireServer" and self == remote then
			if parameters[1]:split(" ")[1] == "/msg" then
				local data = game:GetService("HttpService"):JSONEncode({player.Name,string.sub(parameters[1],6)})
				socket:Send(data)
				return nil
			else
				return namecall(self, unpack(parameters));
			end
		else
			return namecall(self, unpack(parameters));
		end
	end))
end))

local netlessvals = {}

local function netless(part)
	if part:IsA("BasePart") then
		local BodyVelocity = Instance.new("BodyVelocity",part)
		BodyVelocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge); 
		BodyVelocity.P = math.huge; 
		BodyVelocity.Velocity = Vector3.new(-25.05,-25.05,-25.05)

		local BodyAngularVelocity = Instance.new("BodyAngularVelocity",part)
		BodyAngularVelocity.MaxTorque = Vector3.new(math.huge,math.huge,math.huge); 
		BodyAngularVelocity.P = math.huge;

		table.insert(netlessvals,part)

		local disconnect = game["Run Service"].Heartbeat:Connect(function()
			part:ApplyImpulse(Vector3.new(-25.05,-25.05,-25.05))
		end)
		part.AncestryChanged:Connect(function()
			if not part.Parent then 
				disconnect:Disconnect()
			end
		end)
	end
	return part
end

local olddecompile = decompile
local function advdecompile(script)
	return "--  Advanced Decompiler by ProductionTakeOne#3330 \n" .. string.gsub(string.gsub(olddecompile(script),"l__",""),"__1","")
end

getgenv().decompile = advdecompile
getgenv().netless = netless

loadtime = tick() - loadtime
printconsole(tostring("Autoexec loaded in " .. loadtime))
game.Loaded:Wait()
loadstring(game:HttpGet("https://gist.githubusercontent.com/CenteredSniper/5aacd41c762304c92802ed4ad714cc98/raw/e8c9b25cb3660028793342728553efdb24e72bec/NotificationService.lua",true))()({
	Text = "Autoexec loaded in " .. loadtime,
	Duration = 5
})
